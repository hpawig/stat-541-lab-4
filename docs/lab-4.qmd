---
title: "Lab 4"
subtitle: "Interactive Dashboard"
editor: source
author: Hannah Pawig
format:
  dashboard:
    theme: simplex
    orientation: columns
    nav-buttons:
      - icon: instagram
        href: https://www.instagram.com/hannahpawig/
      - icon: facebook
        href: https://www.facebook.com/hannah.pawig.7
      - icon: linkedin
        href: https://www.linkedin.com/in/hannahpawig/
      - icon: github
        href: https://github.com/hpawig/stat-541-lab-3
      - icon: twitter
        href: https://twitter.com/hannahpawig
logo: "images/navigation-logo.svg"
logo-alt: "Red colored navigation logo pointing upward."
server: shiny
---

```{r}
#| context: setup
#| message: false
#| label: load-packages
# Code for Rcpp install is from classmate
# if (packageVersion("Rcpp") >= "1.0.12") {
#   devtools::install_version(
#     "Rcpp", version = "1.0.14",
#     repos = "http://cran.us.r-project.org"
#   )
# }

# Install older version of terra... idea from Gemini
if(!requireNamespace("terra", quietly = TRUE)) {
  # options(repos = c(CRAN = "https://cloud.r-project.org"))
  devtools::install_version(
    "terra", version = "1.8-21", #using older version
    repos = "https://cloud.r-project.org"
  )
}
library(terra)

# Package names
# packages <- c("tidyverse", "here", "readxl", "scales", "RColorBrewer", "leaflet",
#               "sf", "rnaturalearth", "countrycode", "plotly", "janitor",
#               "rnaturalearthdata", "readr", "kableExtra", "paletteer", "shiny", "terra")

library(tidyverse)
library(here)
library(readr)
library(scales)
library(RColorBrewer)
library(leaflet)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(countrycode)
library(plotly)
library(janitor)
library(kableExtra)
library(paletteer)
library(shiny)
library(readxl)


# Install packages not yet installed
# Run this code only once to install all packages
# installed_packages <- packages %in% rownames(installed.packages())
# if (any(installed_packages == FALSE)) {
#   install.packages(packages[!installed_packages])
# }
# commenting this portion of code containing install.packages()
# idea from: https://ubco-biology.github.io/BIOL202/trying-to-use-cran-without-setting-a-mirror.html
# I was getting an error "trying to use CRAN without setting a mirror" 

# Packages loading
# invisible(lapply(packages, library, character.only = TRUE))
## package loading chunk idea from: 
## https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them


# Load custom functions 
# This script holds all the customized functions needed for the UI/Server for my
# Lab 4 shiny app



# Function 1
# This function takes in user input 'question_of_interest' and determines what question to focus on 
find_mapQ <- function(input) {
  question_pattern = ""
  if (input == "Interest in Science") {
    question_pattern = "Q8"
  } else if (input == "Benefit of Science") {
    question_pattern = "Q17"
  } else if (input == "Hope in Scientists") {
    question_pattern = "Q18"
  } else {
    # default is Q9
    question_pattern = "Q9"
  }
  return(question_pattern)
}

# Function 2
# Function takes in question pattern and creates map title.
map_title_maker <- function(question_pattern) {
  if (question_pattern == "Q8") {
    map_title = "<div style='font-size: 16px; font-weight: bold; margin: 5px;'>
      Percentage of People that are interested in science</div>
      \n   (said 'Yes' on Question 8 in Gallup Poll 2018)"
  } else if (question_pattern == "Q9") {
    map_title = "<div style='font-size: 16px; font-weight: bold; margin: 5px;'>
      Percentage of People that are interested in health, disease, or medicine</div>
      \n   (said 'Yes' on Question 9 in Gallup Poll 2018)"
  } else if (question_pattern == "Q17") {
    map_title = "<div style='font-size: 16px; font-weight: bold; margin: 5px;'>
      Percentage of People that say science benefits people like themselves in their country</div>
      \n   (said 'Yes' on Question 17 in Gallup Poll 2018)"
  } else if (question_pattern == "Q18") {
    map_title = "<div style='font-size: 16px; font-weight: bold; margin: 5px;'>
      Percentage of People that agree science and technology will improve life for next generatiions</div>
      \n   (said 'Yes' on Question 18 in Gallup Poll 2018)"
  }
  return (map_title)
  
}



# Function 3
## CITATION (for adding n to boxplot):
## https://waterdata.usgs.gov/blog/boxplots/

# Run this custom function to get continent sizes
# Takes in x, the group of interest
# Returns a dataframe of:
# The Label: group size, found by calculating the length of the vector containing
# The y-coordinate: to position the label next to the corresponding boxplot
n_fun <- function(x){
  return(data.frame(y = 1.1,
                    label = paste0("n = ", length(x))))
}


```

```{r}
#| context: setup
#| label: load-all-data

### DATASET 1: WGM 2018 ###
# wgm18 <- read_csv(file = here("docs",
#                               "data",
#                               "wgm18.csv"))

wgm18 <- read_csv(file = #here(
  "wgm18.csv")
 # )




# Load WGM 2018 data dictionary  #

data_dict <- read_csv(file = #here(
  # "docs",
  # "data",
  "wgm18_data_dict.csv")
#))



country_w_codes <- read_csv(file = #here(
  #"docs","data",
  "country_w_codes.csv")
  #)

regions_codes <- read_csv(file = #here(
  # "docs","data",
    "regions_codes.csv")
#)



# read in 2020 crosstab data
wgm20 <- read_csv(file = #here(
  # "docs",
  # "data",
  "wgm20.csv")
  #)






# create df with country and assigned region
country_region <- read_csv(file = #here(
  # "docs", "data",
  "country_region.csv")
#)
    



# read in dataframe for boxplot 
plot_df <- read_csv(
  file = #here("docs","data",
              "plot_df.csv")
  #)



# MAP DATA


map_df <- read_csv(file = #here("docs",
                               #"data",
                               "wgm18_map.csv")
#)



# Get world map data from Natural Earth
world <- ne_countries(scale = "small", # size
                      returnclass = "sf") # output object



## Start: Vaccine Page Dataframes 


# Read in csv of Q6 & Q8 data
q6_8_data <- read_csv(file = #here("docs",
                                    #"data",
                                    "wgm18_q6_8.csv")
#)

# Read in 2018 medians for question 6 and question 8 

medians_science <- read_csv(file = #here("docs",
                                        #"data",
                                        "wgm18_q6_8_medians.csv")
#)







##       Health, Disease and Medicine Interest Dataframes       ##


# Create a data frame with the country percentages of:
# People who have sought information about Health, Medicine, and Disease (Q7)
# People who say they're interested in Health, Medicine, and Disease (Q9) 

health_interest <- read_csv(file = #here("docs", 
                                        #"data",
                                        "wgm18_q7_9.csv")
#)


# Calculate Medians for Health, Medicine, and Disease percentages
medians_hmd <- read_csv(
  file = #here("docs", 
              #"data", 
              "wgm18_q7_9_medians.csv")
  #)




##                Mental Health Page Dataframes                ##


# SOCIAL MEDIA
soc_media_stats <- read_csv(file =# here(#"docs", 
                                        #"data", 
                                        "wgm20_social_media.csv")
#)



# ANXIETY
# read in anxiety dataframe table
anxiety_stats <- read_csv(file = #here(#"docs",
                              #"data",
                              "wgm20_anxiety.csv")
#)





# MENTAL HEALTH
# read in mental health dataframe table
mental_health <- read_csv(file = #here("docs",
                              #"data",
                              "wgm20_mental_health.csv")
                          #)




# Read in 2020 data on opinion about national government funding research on cancer and/or anxiety


wgm20_govt <- read_csv(file = # here("docs",
                                   #"data", 
                                   "wgm20_govt.csv")
#)

# Read in 2020 data on opinion about mental health
mh_stat <- read_csv(file = #here("docs",
                                  #"data", 
                                  "wgm20_mental_health.csv") |> 
                   # ) |>  
  pull()


# Read in 2018 table on last page
wgm18_Q21 <- read_csv(file = # here("docs",
              #"data",
              "wgm18_Q21.csv")
#)

# Read in 2020 table on last page

wgm20_govt <- read_csv(file = #here("docs",
              #"data",
              "wgm20_govt.csv")
#)
```

# 2018 Opinion: Vaccines

## Card 1 {.tabset}

### Boxplot {height="70%"}

```{r}
#| title: Percentage of People that Believe Vaccines are Safe by Continent
#| label: wellcome-graph-boxplot


# display plot in TAB 1
plotOutput('boxplot')

# Boxplot option

checkboxInput('group_size', 'Display Continent Size')
# Submit button
submitButton("Update", icon("redo"))
```

### Map

```{r}
#| label: output-map
#| title: Map of Countries' Opinions



# output INTERACTIVE MAP in TAB 2
leafletOutput('map')

# Map Options
selectInput(inputId = 'question_of_interest',
            label = 'What Global Opinion Do You Want to See on the Map?',
            choices = c("Interest in Science", "Interest in Health, Disease, and Medicine",
                        "Benefit of Science", "Hope in Scientists"),
            selected = "Interest in Health, Disease, and Medicine",
            width = "100%"
            )
# Submit button
submitButton("Update", icon("redo"))
```

## Card 2 - explanation

The first visualization is a remake of the original Wellcome Global Monitor (WGM) 2018 report, (link may be found in the Graph tab). The map tab contains an *interactive* map of the percentage of people that responded "Yes" to questions regarding trust, interest, or belief in topics related to health and science. This map was created using the `leaflet` package and the Natural Earth data set and takes inspiration from the 2018 report's Chart 2.14 (Wellcome Global Monitor 2019: Understanding and Interest in Science and Health, page 39).

These two visualizations together show us a relationship between interest in health, disease, and medicine and opinion on vaccine safety. For example, the boxplot of the Americas shows that a majority (nearly 75%) of countries in the Americas believe vaccines are safe. Meanwhile looking at the map (option 2), we can quickly see that the countries in the Americas are mostly darker hues, meaning these countries have higher reported interest in health, disease, and medicine.

# 2018: Interest in Health and Science

## Column 1 - 2018 Interest in Science

### Row 1 Scatterplot on Science Interest {height="70%"}

```{r}
#| title: Percentage Who Sought Information about Science vs. Percentage Interested in Science
# create a scatterplot comparing countries' interest in science and health, with Q6 on the y axis
# write the code for the plot

# source for palette
pal <- paletteer_dynamic("cartography::orange.pal",
                         length(unique(q6_8_data$region)))


plot <- q6_8_data |> 
  ggplot(mapping = aes(
    x = Q8,
    y = Q6,
    color = region,
    shape = isWorld,
    label = country,
    # World has a unique label
    text = ifelse(
      isWorld == FALSE,
      paste0(Q8, "% said interested <br>", Q6, "% actually sought information<br>Country: ",
             country, "<br>Region: ",region),
      paste0("Worldwide<br>", Q8, "% are interested<br>", Q6, "% actually sought information")
    ))) +
  geom_jitter() +
  labs(
    x = "",
    y = ""
  ) +
  theme_bw() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(hjust = -0.129),
    plot.subtitle = element_text(hjust = -0.055,
                                 face = "italic"),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    axis.ticks.y = element_blank()
  ) +
  scale_x_continuous(
    labels = scales::percent_format(scale = 1),
    breaks = seq(0, 100, by = 25),
    limits = c(0,100)
  ) +
  
  scale_y_continuous(
    labels = scales::percent_format(scale = 1),
    breaks = seq(0, 100, by = 25),
    limits = c(0,100)
  ) +
  
  scale_color_manual(values = pal) +
  scale_shape_manual(values = c(16, 22)) + # circle and asterik shapes
  # add median vertical and horizontal lines
  geom_hline(yintercept = medians_science$Q6, linetype = "dashed", color = "black") +
  geom_vline(xintercept = medians_science$Q8, linetype = "dashed", color = "black") +
  annotate(
    "text", x = medians_science$Q8 + 12, y = 0, 
    label = paste0("Median: ", medians_science$Q8, "%"), size = 4, color = "black"
    ) +
    annotate(
    "text", y = medians_science$Q6 + 5, x = 4, 
    label = paste0("Median: ", medians_science$Q6,"%"), size = 4, color = "black"
    )


# Re-make Plot but implementing hover tooltips to show percentage and country name when you're on the point
# Asked Gemini how to left-justify plot title
# Used GitHub copilot to autocomplete for tooltip option
plotly_plot <- plot |> 
  ggplotly(tooltip = c("text")) 


plotly_plot
```

### Row 2 - Background {height="30%"}

::: {.card title="Worldwide Science Interest" padding="3px"}
In 2018, the worldwide interest in science **69%** of people said they were interested in science, while **31%** of people said they sought information about science in the last 30 days. There seems to be a large discrepancy between those who are interested in science and those who actually attempt to find more information about science.
:::

## Column 2 - 2018 Scatterplot about countries' interest in Health, Medicine, and Disease

### Row 1 - Scatterplot {height="70%"}

```{r}
#| title: Percentage Who Sought Information about Health, Disease, and Medicine vs. Percentage Interested in Health, Disease, and Medicine
# create a scatterplot comparing countries' interest in science and health, with Q6 on the y axis
# write the code for the plot

# source for palette: https://r-charts.com/color-palettes/#dynamic
pal <- paletteer_dynamic("cartography::orange.pal",
                         length(unique(health_interest$region)))


plot <- health_interest |> 
  ggplot(mapping = aes(
    x = Q9,
    y = Q7,
    color = region,
    label = country,
    shape = isWorld,
    text = ifelse(
      isWorld == FALSE,
      paste0(Q9, "% said interested <br>", Q7, "% actually sought information<br>Country: ",
             country, "<br>Region: ",region),
      paste0("Worldwide<br>", Q9, "% are interested <br>", Q7, "% actually sought information")
    ))) +
  geom_jitter() +
  labs(
    x = "",
    y = ""
  ) +
  theme_bw() +
  theme(
    text = element_text(family = "sans"),
    legend.position = "none",
    plot.title = element_text(hjust = -0.129),
    plot.subtitle = element_text(hjust = -0.055,
                                 face = "italic"),
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    axis.ticks.y = element_blank()
  ) +
  scale_x_continuous(
    labels = scales::percent_format(scale = 1),
    breaks = seq(0, 100, by = 25),
    limits = c(0,100)
  ) +
  
  scale_y_continuous(
    labels = scales::percent_format(scale = 1),
    breaks = seq(0, 100, by = 25),
    limits = c(0,100)
  ) +
  
  scale_color_manual(values = pal) +
  scale_shape_manual(values = c(16, 22)) + # circle and asterik shapes
  # add median vertical and horizontal lines
  geom_hline(yintercept = medians_hmd$Q7, linetype = "dashed", color = "black") +
  geom_vline(xintercept = medians_hmd$Q9, linetype = "dashed", color = "black") +
  annotate(
    "text", x = medians_hmd$Q9 + 12, y = 0, 
    label = paste0("Median: ", medians_hmd$Q9, "%"), size = 4, color = "black"
    ) +
    annotate(
    "text", y = medians_hmd$Q7 + 5, x = 4, 
    label = paste0("Median: ", medians_hmd$Q7,"%"), size = 4, color = "black"
    )


# Re-make Plot but implementing hover tooltips to show percentage and country name when you're on the point
# Asked Gemini how to left-justify plot title
# Used GitHub copilot to autocomplete for tooltip option
plotly_plot <- plot |> 
  ggplotly(tooltip = c("text")) 


plotly_plot
```

### Row 2 - Background {height="30%"}

::: {.primary-card title="Worldwide Health, Disease, and Medicine Interest" padding="3px"}
Worldwide, about **78%** of people said they were interested in health, disease, or medicine, while **45%** of people said they sought information about health, medicine, or disease in the last 30 days. Similarly, more people claim to be in interested in these topics however are not actively seeking information about them.
:::

# 2020 Opinion: Mental Health

## Column 1

### Row 1 - Background {height="30%"}

According to the 2020 Wellcome Gallup Monitor report, the survey was more focused on the importance of mental health. The following table shows some more worldwide responses in 2020 related to anxiety, depression, and social media -- common topics when it comes to mental health today.

Using questions that mention keywords like *Mental Health*, *Social Media*, or *Anxiety*, we're able to see the various statistics displayed on the side.

### Row 2 - Sliders

::: {.text-info title="Instructions" padding="3px"}
Use each slider to change the chosen percentage and view different summary statistics from the 2020 Wellcome Gallup Monitor Survey. The cards display social media and anxiety statistics (using the 2020 survey data) closest to the chosen respective percentage level.
:::

```{r}
#| label: quick-facts-2020-sliders
#| title: Sliders


# Slider input
# This slider takes in a percentage from 1-100 to allow the user to see what statistics
# about mental health, social media, and anxiety they want to see.

sliderInput("quick_facts_percentage_sm",
            label = "Choose a percentage level for Social Media card",
            min = 15, # Min(soc_media_stats$Percentage) = 18%
            max = 65, # Max(soc_media_stats$Percentage) = 69%
            value = 1,
            step = ,
            sep = "",
            animate = TRUE)


sliderInput("quick_facts_percentage_a",
            label = "Choose a percentage level for the Anxiety card",
            min = 30, # min(anxiety_stats$Percentage) = 30.2%
            max = 47, # max(anxiety_stats$Percentage) = 47.3%
            value = 10,
            step = 0.1,
            sep = "",
            animate = TRUE)


# Submit button
submitButton("Submit Changes", icon("refresh"))
```

## Quick Stat Cards {width="30%"}

### Social Media

```{r}
#| label: quick-facts-social-media-card
#| title: Social Media

uiOutput("quick_facts_social_media")
```

### Anxiety

```{r}
#| label: quick-facts-anxiety-card
#| title: Anxiety

uiOutput("quick_facts_anxiety")
```

### Mental Health

```{r}
#| label: quick-facts-mental-health-card
#| title: Mental Health

uiOutput("quick_facts_mental_health")
```

# Comparing the Years

## Card 3 - Comparing 2018 and 2020 opinions (Quick facts) {.tabset}

### Tables

#### 2018

```{r}
#| label: quick-fact-tables-2018
# Table (Tab 1)

  # Display
wgm18_Q21 |> 
  as_tibble() |>
  kbl(caption = "General Trust in National Government and Trust in Government Health/Medical Advice in 2018") |> 
  kable_classic(html_font = "Cambria")

```

#### 2020

```{r}
#| label: quick-fact-tables-2020

# (Table: Tab 2)

# display
wgm20_govt |> 
  as_tibble() |> 
  kbl(caption = "General Opinion on Need for Government Research in Health and Medicine in 2020") |> 
  kable_classic(html_font = "Cambria")
```

### Background Information

The 2018 questions that were used to gauge trust in one's own national government are:

-   "How about the national government in this country? Do you trust them a lot, some, not much, or not at all?"

-   "In general, how much do you trust medical and health advice from the government in this country?"

Answer choices for the 2018 questions used to calculate the percentages in the first table are: a lot, some, not much, or not at all. The percentages include those who responded with *a lot* or *some* trust.

The 2020 questions used to gauge opinion on government funding for research:

-   "Important for National Govt to Fund Research on Cancer"

-   "Important for National Govt to Fund Research on Anxiety/Depression"

Answer choices for the two 2020 questions used to create the tables are extremely important, somewhat important, not too important, not important at all, or don't know/refused to answer. The percentages in the second table include those who responded with *extremely important* or *somewhat important*.

## Column 2

#### Row 1 - Commentary

::: {.card title="Commentary" padding="3px"}
Though the 2018 and 2020 Wellcome Global Monitor surveys did not ask the same questions, they have questions regarding national government. In 2018, the general trust in national government and trust in government health and medical advice were asked. In 2020, the survey asked about the importance of government funding for research on cancer and anxiety. The tables above show the percentage of people who responded with a lot or some trust in their national government in 2018 and the percentage of people who responded with extremely important or somewhat important for government funding for research on cancer and anxiety in 2020.

It seems that in 2020 (post COVID pandemic), larger percentages of the world believe the government should do more research on either, which might lead to greater trust in government advice about health and medicine. It's noted in the report that less countries were surveyed in 2020 than in 2018 due to the global pandemic and also required a change in surveying method in the more recent survey (conducted only through phone call in 2020).
:::

#### Row 2 - Link to 2018 and 2020 data

::: {.text-secondary title="Links and Information" padding="3px"}
-   The full Wellcome Global Monitor 2018 report can be found here: <https://wellcome.ac.uk/sites/default/files/wellcome-global-monitor-2018.pdf>.
-   The full Wellcome Global Monitor 2020 report and data sets can be found here: <https://wellcome.org/reports/wellcome-global-monitor-covid-19/2020>.
:::

::: {.text-secondary title= "Other sources" padding="3px"}
-   Dashboard theme from <https://bootswatch.com/simplex/>.
-   Navigation Icon from <https://www.flaticon.com/free-icons/navigation>.
:::

```{r}
#| context: server
#| label: server-code

# Define Boxplot output - GRAPH 1
output$boxplot <- renderPlot({
  
  
  # define default boxplot
  p <- plot_df |> 
    ggplot(mapping = aes(
      x = continent,
      y = percentage,
      fill = "#b92007")) +
    geom_boxplot() +
    labs(
      subtitle = "n = number of countries",
      x = "",
      y = ""
    ) +
    theme_bw() +
    theme(
      text = element_text(family = "sans"),
      legend.position = "none",
      plot.subtitle = element_text(hjust = -0.3,
                                   face = "italic"),
      panel.grid.minor = element_blank(),
      panel.grid.major = element_blank(),
      axis.ticks.y = element_blank()
    ) +
    scale_y_continuous(
      labels = scales::percent_format(scale = 100), # axis labels from proportions to %s
      breaks = seq(0, 1, by = 0.25),
      limits = c(0.24,1.2)
    )  +
    coord_flip()

  # Options
  
  # Checkbox: add continent sizes to plot
  if (input$group_size) {
    
    update_geom_defaults("text",
                       list(size = 4,
                            family = "sans"))
     p <- p + stat_summary(fun.data = n_fun,
                            geom = "text", 
                            hjust = 0.4)}
     
 # output boxplot     
  p
  
})



### Define map plot ###



output$map <- renderLeaflet({

# Option 1: Choosing question
  
  # update (filter) map data based on user's inputted question of interest
  map_filtered <- map_df |>
    filter(
      # filter data based on user's inputted question of interest
      str_detect(question, pattern = find_mapQ(input$question_of_interest))
    )
  
  
    # Merge Poll data with the world map data
  world_data <- world |>
    left_join(map_filtered, by = c("iso_a3" = "code"))
  
  # Define color palette based on percentage
  pal <- colorNumeric(
    palette = "OrRd", # Color palette
    domain = world_data$percentage_yes
  )
  
  
    # Create leaflet map
  map_plot <- world_data |>
    leaflet() |>
    addTiles() |>
    addPolygons(
      fillColor = ~pal(percentage_yes),
      color = "black", # Border color
      weight = 1, # Border weight
      fillOpacity = 0.7,
      highlightOptions = highlightOptions(
        weight = 2,
        color = "white",
        fillOpacity = 0.7,
        bringToFront = TRUE
      ),
      # Tooltip label
      # country: %

      # if else to show "no data available" if NA
      label = ifelse(
        is.na(world_data$percentage_yes),
        paste0('No data available.'),
        paste0(world_data$country,
                ": ", world_data$percentage_yes, "%")),
      labelOptions = labelOptions(
        style = list("font-weight" = "normal", padding = "3px 8px"),
        textsize = "15px",
        direction = "auto"
      )
    ) |>

    # Graph title
    # consulted Gemini for use of addControl

    addControl(
      html = map_title_maker(question_pattern = find_mapQ(input = input$question_of_interest)),
      position = "bottomleft" # Adjust position as needed
    )

  # call map object
  map_plot
  

})

##  Define output for the quick facts text ##
# Reference to figure out how to use HTML in Shiny: 
# https://stackoverflow.com/questions/1956790/how-to-use-html-in-r-shiny

# Social media


output$quick_facts_social_media <- renderUI({
  closest_p <- soc_media_stats |> 
    filter(
      # filter for the percentage chosen by the user
      Percentage >= (input$quick_facts_percentage_sm)
    ) |> 
    select(Topic, Percentage) |> 
    dplyr::arrange(Percentage) |> 
    head(n = 1) # only want the closest percentage
    
  string <- HTML(paste0(
    "<center>In 2020,<br><h3 style = 'color:#E74C3C;'>",
    closest_p$Percentage,"</h3><br>", closest_p$Topic,".</center>"
  ))

  string
})


# Anxiety
output$quick_facts_anxiety <- renderUI({
  closest_p <- anxiety_stats |> 
    filter(
      Percentage >= (input$quick_facts_percentage_a)
    ) |> 
    select(Topic, Percentage) |> 
    dplyr::arrange(Percentage) |> 
    head(n = 1) 

  string <- HTML(paste0(
    "<center>In 2020,<br><h3 style = 'color:#E74C3C;'>",
    closest_p$Percentage,"</h3><br>", closest_p$Topic,".<center>"
  ))
  
  string
})

# Mental Health
output$quick_facts_mental_health <- renderUI({
  string <- HTML(paste0("<center>In 2020, about <br><h3 style = 'color:#E74C3C;'>", mh_stat ,"</h3><br> Agreed that Mental Health is <u>More or As Important as Physical Health</u> When Regarding One's We